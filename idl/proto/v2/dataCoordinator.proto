syntax="proto3";
package dataCoordinatorV2;
option go_package="./dataCoordinatorV2";

import "google/protobuf/empty.proto";
// import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

// dataset coordinator is managing kv data or vector data
service DatasetCoordinator {
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty) {}
    // vector rpc
    rpc Insert(ModifyDataset) returns (Response) {}
    rpc Update(ModifyDataset) returns (Response) {}
    rpc Delete(DeleteDataset) returns (Response) {}
    // vectorsearch <- only search vector query
    // filtersearch <- not using vector, only use filter
    // hybrid filter + vector
    rpc VectorSearch(SearchReq) returns (SearchResponse) {}
    rpc FilterSearch(SearchReq) returns (SearchResponse) {}
    rpc HybridSearch(SearchReq) returns (SearchResponse) {}

    rpc BatchInsert(stream StreamModifyDataset) returns (stream Response) {}
    rpc BatchUpdate(stream StreamModifyDataset) returns (stream Response) {}
    rpc BatchDelete(BatchDeleteIds) returns (Response) {}
    //It may conflict with multiple tasks, so we recommend avoiding it during busy times and running it during idle times.
    rpc PerformanceCompaction(google.protobuf.Empty) returns (Response) {}
}

message BatchDeleteIds {
    repeated string ids = 1;
}

message StreamModifyDataset {
    ModifyDataset dataset=1;
    bool final=2;
}

message ModifyDataset {
    string id=1;
    string collection_name=2;
    repeated float vector=3;
    google.protobuf.Struct metadata=4;
}

message DeleteDataset {
    string id=1;
    string collection_name=2;
}

message Response {
    bool status=1;
    Error error=2;
}

message Error {
    string error_message=1;
    ErrorCode error_code=2;
}


enum ErrorCode {
    UNDEFINED=0; // check error message
    RPC_ERROR=1;
    COMMUNICATION_SHARD_RPC_ERROR=2;
    COMMUNICATION_SHARD_ERROR=3;
    MARSHAL_ERROR=4;
    INTERNAL_FUNC_ERROR=5;
}

message SearchReq {
    string collection_name=1;
    repeated float vector=2;
    uint64 topK=3;
    map<string,string> filter=4;
    bool with_latency=5;
}

message SearchResponse {
    bool status = 1;
    Error error=2;
    repeated Candidates candidates=3;
    string latency=4;
}

message Candidates {
    string id = 1;
    google.protobuf.Struct metadata = 2;
    float score=3;
}