// Licensed to sjy-dv under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. sjy-dv licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.0
// source: idl/proto/v4/edge.proto

package edgepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexType int32

const (
	IndexType_String  IndexType = 0
	IndexType_Integer IndexType = 1
	IndexType_Float   IndexType = 2
	IndexType_Boolean IndexType = 3
)

// Enum value maps for IndexType.
var (
	IndexType_name = map[int32]string{
		0: "String",
		1: "Integer",
		2: "Float",
		3: "Boolean",
	}
	IndexType_value = map[string]int32{
		"String":  0,
		"Integer": 1,
		"Float":   2,
		"Boolean": 3,
	}
)

func (x IndexType) Enum() *IndexType {
	p := new(IndexType)
	*p = x
	return p
}

func (x IndexType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexType) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v4_edge_proto_enumTypes[0].Descriptor()
}

func (IndexType) Type() protoreflect.EnumType {
	return &file_idl_proto_v4_edge_proto_enumTypes[0]
}

func (x IndexType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexType.Descriptor instead.
func (IndexType) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{0}
}

type Distance int32

const (
	Distance_Cosine    Distance = 0
	Distance_Euclidean Distance = 1
)

// Enum value maps for Distance.
var (
	Distance_name = map[int32]string{
		0: "Cosine",
		1: "Euclidean",
	}
	Distance_value = map[string]int32{
		"Cosine":    0,
		"Euclidean": 1,
	}
)

func (x Distance) Enum() *Distance {
	p := new(Distance)
	*p = x
	return p
}

func (x Distance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Distance) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v4_edge_proto_enumTypes[1].Descriptor()
}

func (Distance) Type() protoreflect.EnumType {
	return &file_idl_proto_v4_edge_proto_enumTypes[1]
}

func (x Distance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Distance.Descriptor instead.
func (Distance) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{1}
}

type Quantization int32

const (
	Quantization_None Quantization = 0
	Quantization_F16  Quantization = 1
	Quantization_F8   Quantization = 2
	Quantization_BF16 Quantization = 3
)

// Enum value maps for Quantization.
var (
	Quantization_name = map[int32]string{
		0: "None",
		1: "F16",
		2: "F8",
		3: "BF16",
	}
	Quantization_value = map[string]int32{
		"None": 0,
		"F16":  1,
		"F8":   2,
		"BF16": 3,
	}
)

func (x Quantization) Enum() *Quantization {
	p := new(Quantization)
	*p = x
	return p
}

func (x Quantization) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Quantization) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v4_edge_proto_enumTypes[2].Descriptor()
}

func (Quantization) Type() protoreflect.EnumType {
	return &file_idl_proto_v4_edge_proto_enumTypes[2]
}

func (x Quantization) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Quantization.Descriptor instead.
func (Quantization) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{2}
}

type ErrorCode int32

const (
	ErrorCode_UNDEFINED                     ErrorCode = 0 // check error message
	ErrorCode_RPC_ERROR                     ErrorCode = 1
	ErrorCode_COMMUNICATION_SHARD_RPC_ERROR ErrorCode = 2
	ErrorCode_COMMUNICATION_SHARD_ERROR     ErrorCode = 3
	ErrorCode_MARSHAL_ERROR                 ErrorCode = 4
	ErrorCode_INTERNAL_FUNC_ERROR           ErrorCode = 5
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "UNDEFINED",
		1: "RPC_ERROR",
		2: "COMMUNICATION_SHARD_RPC_ERROR",
		3: "COMMUNICATION_SHARD_ERROR",
		4: "MARSHAL_ERROR",
		5: "INTERNAL_FUNC_ERROR",
	}
	ErrorCode_value = map[string]int32{
		"UNDEFINED":                     0,
		"RPC_ERROR":                     1,
		"COMMUNICATION_SHARD_RPC_ERROR": 2,
		"COMMUNICATION_SHARD_ERROR":     3,
		"MARSHAL_ERROR":                 4,
		"INTERNAL_FUNC_ERROR":           5,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v4_edge_proto_enumTypes[3].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_idl_proto_v4_edge_proto_enumTypes[3]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{3}
}

type IndexChagedType int32

const (
	// Insert Or Update
	IndexChagedType_CHANGED IndexChagedType = 0
	IndexChagedType_DELETE  IndexChagedType = 1
)

// Enum value maps for IndexChagedType.
var (
	IndexChagedType_name = map[int32]string{
		0: "CHANGED",
		1: "DELETE",
	}
	IndexChagedType_value = map[string]int32{
		"CHANGED": 0,
		"DELETE":  1,
	}
)

func (x IndexChagedType) Enum() *IndexChagedType {
	p := new(IndexChagedType)
	*p = x
	return p
}

func (x IndexChagedType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexChagedType) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v4_edge_proto_enumTypes[4].Descriptor()
}

func (IndexChagedType) Type() protoreflect.EnumType {
	return &file_idl_proto_v4_edge_proto_enumTypes[4]
}

func (x IndexChagedType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexChagedType.Descriptor instead.
func (IndexChagedType) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{4}
}

type LogicalOperator int32

const (
	LogicalOperator_AND LogicalOperator = 0
	LogicalOperator_OR  LogicalOperator = 1
)

// Enum value maps for LogicalOperator.
var (
	LogicalOperator_name = map[int32]string{
		0: "AND",
		1: "OR",
	}
	LogicalOperator_value = map[string]int32{
		"AND": 0,
		"OR":  1,
	}
)

func (x LogicalOperator) Enum() *LogicalOperator {
	p := new(LogicalOperator)
	*p = x
	return p
}

func (x LogicalOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v4_edge_proto_enumTypes[5].Descriptor()
}

func (LogicalOperator) Type() protoreflect.EnumType {
	return &file_idl_proto_v4_edge_proto_enumTypes[5]
}

func (x LogicalOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalOperator.Descriptor instead.
func (LogicalOperator) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{5}
}

type Op int32

const (
	Op_EQ  Op = 0 // equal  ==
	Op_NEQ Op = 1 // Not Equal !=
	Op_GT  Op = 2 // greater than >
	Op_GTE Op = 3 // =>
	Op_LT  Op = 4 //less than <
	Op_LTE Op = 5 // <=
)

// Enum value maps for Op.
var (
	Op_name = map[int32]string{
		0: "EQ",
		1: "NEQ",
		2: "GT",
		3: "GTE",
		4: "LT",
		5: "LTE",
	}
	Op_value = map[string]int32{
		"EQ":  0,
		"NEQ": 1,
		"GT":  2,
		"GTE": 3,
		"LT":  4,
		"LTE": 5,
	}
)

func (x Op) Enum() *Op {
	p := new(Op)
	*p = x
	return p
}

func (x Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Op) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v4_edge_proto_enumTypes[6].Descriptor()
}

func (Op) Type() protoreflect.EnumType {
	return &file_idl_proto_v4_edge_proto_enumTypes[6]
}

func (x Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Op.Descriptor instead.
func (Op) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{6}
}

type CollectionName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	WithSize       bool   `protobuf:"varint,2,opt,name=with_size,json=withSize,proto3" json:"with_size,omitempty"`
}

func (x *CollectionName) Reset() {
	*x = CollectionName{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionName) ProtoMessage() {}

func (x *CollectionName) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionName.ProtoReflect.Descriptor instead.
func (*CollectionName) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{0}
}

func (x *CollectionName) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *CollectionName) GetWithSize() bool {
	if x != nil {
		return x.WithSize
	}
	return false
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string       `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Index          []*Index     `protobuf:"bytes,2,rep,name=index,proto3" json:"index,omitempty"`
	Distance       Distance     `protobuf:"varint,3,opt,name=distance,proto3,enum=edgepb.Distance" json:"distance,omitempty"`
	Quantization   Quantization `protobuf:"varint,4,opt,name=quantization,proto3,enum=edgepb.Quantization" json:"quantization,omitempty"`
	Dim            uint32       `protobuf:"varint,5,opt,name=dim,proto3" json:"dim,omitempty"`
	Versioning     bool         `protobuf:"varint,6,opt,name=versioning,proto3" json:"versioning,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{1}
}

func (x *Collection) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *Collection) GetIndex() []*Index {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *Collection) GetDistance() Distance {
	if x != nil {
		return x.Distance
	}
	return Distance_Cosine
}

func (x *Collection) GetQuantization() Quantization {
	if x != nil {
		return x.Quantization
	}
	return Quantization_None
}

func (x *Collection) GetDim() uint32 {
	if x != nil {
		return x.Dim
	}
	return 0
}

func (x *Collection) GetVersioning() bool {
	if x != nil {
		return x.Versioning
	}
	return false
}

type CollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Status     bool        `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error      *Error      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CollectionResponse) Reset() {
	*x = CollectionResponse{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionResponse) ProtoMessage() {}

func (x *CollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionResponse.ProtoReflect.Descriptor instead.
func (*CollectionResponse) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{2}
}

func (x *CollectionResponse) GetCollection() *Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *CollectionResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CollectionResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName  string    `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexType  IndexType `protobuf:"varint,2,opt,name=index_type,json=indexType,proto3,enum=edgepb.IndexType" json:"index_type,omitempty"`
	EnableNull bool      `protobuf:"varint,3,opt,name=enable_null,json=enableNull,proto3" json:"enable_null,omitempty"`
	PrimaryKey bool      `protobuf:"varint,4,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
}

func (x *Index) Reset() {
	*x = Index{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{3}
}

func (x *Index) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *Index) GetIndexType() IndexType {
	if x != nil {
		return x.IndexType
	}
	return IndexType_String
}

func (x *Index) GetEnableNull() bool {
	if x != nil {
		return x.EnableNull
	}
	return false
}

func (x *Index) GetPrimaryKey() bool {
	if x != nil {
		return x.PrimaryKey
	}
	return false
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Response) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string    `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorCode    ErrorCode `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=edgepb.ErrorCode" json:"error_code,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{5}
}

func (x *Error) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Error) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_UNDEFINED
}

type DeleteCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteCollectionResponse) Reset() {
	*x = DeleteCollectionResponse{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionResponse) ProtoMessage() {}

func (x *DeleteCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionResponse.ProtoReflect.Descriptor instead.
func (*DeleteCollectionResponse) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCollectionResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DeleteCollectionResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CollectionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection       *Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	CollectionSize   uint32      `protobuf:"varint,2,opt,name=collection_size,json=collectionSize,proto3" json:"collection_size,omitempty"`
	CollectionMemory uint64      `protobuf:"varint,3,opt,name=collection_memory,json=collectionMemory,proto3" json:"collection_memory,omitempty"`
	Load             bool        `protobuf:"varint,4,opt,name=load,proto3" json:"load,omitempty"`
	Status           bool        `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Error            *Error      `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CollectionDetail) Reset() {
	*x = CollectionDetail{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionDetail) ProtoMessage() {}

func (x *CollectionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionDetail.ProtoReflect.Descriptor instead.
func (*CollectionDetail) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{7}
}

func (x *CollectionDetail) GetCollection() *Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *CollectionDetail) GetCollectionSize() uint32 {
	if x != nil {
		return x.CollectionSize
	}
	return 0
}

func (x *CollectionDetail) GetCollectionMemory() uint64 {
	if x != nil {
		return x.CollectionMemory
	}
	return 0
}

func (x *CollectionDetail) GetLoad() bool {
	if x != nil {
		return x.Load
	}
	return false
}

func (x *CollectionDetail) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CollectionDetail) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type IndexChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string           `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	PrimaryKey     string           `protobuf:"bytes,2,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	Metadata       *structpb.Struct `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Vectors        []float32        `protobuf:"fixed32,4,rep,packed,name=vectors,proto3" json:"vectors,omitempty"`
	Changed        IndexChagedType  `protobuf:"varint,5,opt,name=changed,proto3,enum=edgepb.IndexChagedType" json:"changed,omitempty"`
}

func (x *IndexChange) Reset() {
	*x = IndexChange{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexChange) ProtoMessage() {}

func (x *IndexChange) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexChange.ProtoReflect.Descriptor instead.
func (*IndexChange) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{8}
}

func (x *IndexChange) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *IndexChange) GetPrimaryKey() string {
	if x != nil {
		return x.PrimaryKey
	}
	return ""
}

func (x *IndexChange) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *IndexChange) GetVectors() []float32 {
	if x != nil {
		return x.Vectors
	}
	return nil
}

func (x *IndexChange) GetChanged() IndexChagedType {
	if x != nil {
		return x.Changed
	}
	return IndexChagedType_CHANGED
}

type SearchIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName        string            `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Vector                []float32         `protobuf:"fixed32,2,rep,packed,name=vector,proto3" json:"vector,omitempty"`
	Offset                uint64            `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                 uint64            `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	FilterExpression      *FilterExpression `protobuf:"bytes,5,opt,name=filter_expression,json=filterExpression,proto3" json:"filter_expression,omitempty"`
	HighResourceAvaliable bool              `protobuf:"varint,6,opt,name=high_resource_avaliable,json=highResourceAvaliable,proto3" json:"high_resource_avaliable,omitempty"`
}

func (x *SearchIndex) Reset() {
	*x = SearchIndex{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchIndex) ProtoMessage() {}

func (x *SearchIndex) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchIndex.ProtoReflect.Descriptor instead.
func (*SearchIndex) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{9}
}

func (x *SearchIndex) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *SearchIndex) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *SearchIndex) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchIndex) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchIndex) GetFilterExpression() *FilterExpression {
	if x != nil {
		return x.FilterExpression
	}
	return nil
}

func (x *SearchIndex) GetHighResourceAvaliable() bool {
	if x != nil {
		return x.HighResourceAvaliable
	}
	return false
}

type SearchFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName string `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Op        Op     `protobuf:"varint,2,opt,name=op,proto3,enum=edgepb.Op" json:"op,omitempty"`
	// Types that are assignable to Value:
	//
	//	*SearchFilter_StringVal
	//	*SearchFilter_IntVal
	//	*SearchFilter_FloatVal
	//	*SearchFilter_BoolVal
	Value isSearchFilter_Value `protobuf_oneof:"value"`
}

func (x *SearchFilter) Reset() {
	*x = SearchFilter{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilter) ProtoMessage() {}

func (x *SearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilter.ProtoReflect.Descriptor instead.
func (*SearchFilter) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{10}
}

func (x *SearchFilter) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *SearchFilter) GetOp() Op {
	if x != nil {
		return x.Op
	}
	return Op_EQ
}

func (m *SearchFilter) GetValue() isSearchFilter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *SearchFilter) GetStringVal() string {
	if x, ok := x.GetValue().(*SearchFilter_StringVal); ok {
		return x.StringVal
	}
	return ""
}

func (x *SearchFilter) GetIntVal() int64 {
	if x, ok := x.GetValue().(*SearchFilter_IntVal); ok {
		return x.IntVal
	}
	return 0
}

func (x *SearchFilter) GetFloatVal() float64 {
	if x, ok := x.GetValue().(*SearchFilter_FloatVal); ok {
		return x.FloatVal
	}
	return 0
}

func (x *SearchFilter) GetBoolVal() bool {
	if x, ok := x.GetValue().(*SearchFilter_BoolVal); ok {
		return x.BoolVal
	}
	return false
}

type isSearchFilter_Value interface {
	isSearchFilter_Value()
}

type SearchFilter_StringVal struct {
	StringVal string `protobuf:"bytes,3,opt,name=string_val,json=stringVal,proto3,oneof"`
}

type SearchFilter_IntVal struct {
	IntVal int64 `protobuf:"varint,4,opt,name=int_val,json=intVal,proto3,oneof"`
}

type SearchFilter_FloatVal struct {
	FloatVal float64 `protobuf:"fixed64,5,opt,name=float_val,json=floatVal,proto3,oneof"`
}

type SearchFilter_BoolVal struct {
	BoolVal bool `protobuf:"varint,6,opt,name=bool_val,json=boolVal,proto3,oneof"`
}

func (*SearchFilter_StringVal) isSearchFilter_Value() {}

func (*SearchFilter_IntVal) isSearchFilter_Value() {}

func (*SearchFilter_FloatVal) isSearchFilter_Value() {}

func (*SearchFilter_BoolVal) isSearchFilter_Value() {}

type FilterExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Expr:
	//
	//	*FilterExpression_Filter
	//	*FilterExpression_Composite
	Expr isFilterExpression_Expr `protobuf_oneof:"expr"`
}

func (x *FilterExpression) Reset() {
	*x = FilterExpression{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpression) ProtoMessage() {}

func (x *FilterExpression) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpression.ProtoReflect.Descriptor instead.
func (*FilterExpression) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{11}
}

func (m *FilterExpression) GetExpr() isFilterExpression_Expr {
	if m != nil {
		return m.Expr
	}
	return nil
}

func (x *FilterExpression) GetFilter() *SearchFilter {
	if x, ok := x.GetExpr().(*FilterExpression_Filter); ok {
		return x.Filter
	}
	return nil
}

func (x *FilterExpression) GetComposite() *CompositeFilter {
	if x, ok := x.GetExpr().(*FilterExpression_Composite); ok {
		return x.Composite
	}
	return nil
}

type isFilterExpression_Expr interface {
	isFilterExpression_Expr()
}

type FilterExpression_Filter struct {
	Filter *SearchFilter `protobuf:"bytes,1,opt,name=filter,proto3,oneof"`
}

type FilterExpression_Composite struct {
	Composite *CompositeFilter `protobuf:"bytes,2,opt,name=composite,proto3,oneof"`
}

func (*FilterExpression_Filter) isFilterExpression_Expr() {}

func (*FilterExpression_Composite) isFilterExpression_Expr() {}

type CompositeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op          LogicalOperator     `protobuf:"varint,1,opt,name=op,proto3,enum=edgepb.LogicalOperator" json:"op,omitempty"`
	Expressions []*FilterExpression `protobuf:"bytes,2,rep,name=expressions,proto3" json:"expressions,omitempty"`
}

func (x *CompositeFilter) Reset() {
	*x = CompositeFilter{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompositeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompositeFilter) ProtoMessage() {}

func (x *CompositeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompositeFilter.ProtoReflect.Descriptor instead.
func (*CompositeFilter) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{12}
}

func (x *CompositeFilter) GetOp() LogicalOperator {
	if x != nil {
		return x.Op
	}
	return LogicalOperator_AND
}

func (x *CompositeFilter) GetExpressions() []*FilterExpression {
	if x != nil {
		return x.Expressions
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     bool          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error      *Error        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Candidates []*Candidates `protobuf:"bytes,3,rep,name=candidates,proto3" json:"candidates,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{13}
}

func (x *SearchResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SearchResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SearchResponse) GetCandidates() []*Candidates {
	if x != nil {
		return x.Candidates
	}
	return nil
}

type Candidates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *structpb.Struct `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Score    float32          `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *Candidates) Reset() {
	*x = Candidates{}
	mi := &file_idl_proto_v4_edge_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Candidates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candidates) ProtoMessage() {}

func (x *Candidates) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v4_edge_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candidates.ProtoReflect.Descriptor instead.
func (*Candidates) Descriptor() ([]byte, []int) {
	return file_idl_proto_v4_edge_proto_rawDescGZIP(), []int{14}
}

func (x *Candidates) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Candidates) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

var File_idl_proto_v4_edge_proto protoreflect.FileDescriptor

var file_idl_proto_v4_edge_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x64, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x34, 0x2f, 0x65,
	0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x64, 0x67, 0x65, 0x70,
	0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x2c, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x64, 0x69, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x85, 0x01, 0x0a, 0x12,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0a,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x22, 0x47, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5e, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x57, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xed, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xd9, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x07, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x68, 0x61, 0x67, 0x65,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0xfb,
	0x01, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x45, 0x0a,
	0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70,
	0x62, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x68, 0x69, 0x67, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x76, 0x61, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xca, 0x01, 0x0a,
	0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x02,
	0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70,
	0x62, 0x2e, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x07, 0x69, 0x6e, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x56, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x37,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x22,
	0x76, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x27, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x0a, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x2a, 0x3c, 0x0a, 0x09, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x10, 0x03, 0x2a, 0x25, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x75,
	0x63, 0x6c, 0x69, 0x64, 0x65, 0x61, 0x6e, 0x10, 0x01, 0x2a, 0x33, 0x0a, 0x0c, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x31, 0x36, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02,
	0x46, 0x38, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x46, 0x31, 0x36, 0x10, 0x03, 0x2a, 0x97,
	0x01, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52,
	0x50, 0x43, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f,
	0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x48, 0x41, 0x52,
	0x44, 0x5f, 0x52, 0x50, 0x43, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x1d, 0x0a,
	0x19, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x48, 0x41, 0x52, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d,
	0x4d, 0x41, 0x52, 0x53, 0x48, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12,
	0x17, 0x0a, 0x13, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x46, 0x55, 0x4e, 0x43,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x2a, 0x2a, 0x0a, 0x0f, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x43, 0x68, 0x61, 0x67, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x01, 0x2a, 0x22, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x52, 0x10, 0x01, 0x2a, 0x37, 0x0a, 0x02, 0x4f, 0x70, 0x12, 0x06,
	0x0a, 0x02, 0x45, 0x51, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x51, 0x10, 0x01, 0x12,
	0x06, 0x0a, 0x02, 0x47, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x54, 0x45, 0x10, 0x03,
	0x12, 0x06, 0x0a, 0x02, 0x4c, 0x54, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x54, 0x45, 0x10,
	0x05, 0x32, 0xc5, 0x04, 0x0a, 0x07, 0x45, 0x64, 0x67, 0x65, 0x52, 0x70, 0x63, 0x12, 0x38, 0x0a,
	0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x1a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x20, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x18, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x0e, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x18, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x10, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x05, 0x46, 0x6c, 0x75,
	0x73, 0x68, 0x12, 0x16, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x10, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x30,
	0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x13, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x13, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a,
	0x16, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x65,
	0x64, 0x67, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_idl_proto_v4_edge_proto_rawDescOnce sync.Once
	file_idl_proto_v4_edge_proto_rawDescData = file_idl_proto_v4_edge_proto_rawDesc
)

func file_idl_proto_v4_edge_proto_rawDescGZIP() []byte {
	file_idl_proto_v4_edge_proto_rawDescOnce.Do(func() {
		file_idl_proto_v4_edge_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_proto_v4_edge_proto_rawDescData)
	})
	return file_idl_proto_v4_edge_proto_rawDescData
}

var file_idl_proto_v4_edge_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_idl_proto_v4_edge_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_idl_proto_v4_edge_proto_goTypes = []any{
	(IndexType)(0),                   // 0: edgepb.IndexType
	(Distance)(0),                    // 1: edgepb.Distance
	(Quantization)(0),                // 2: edgepb.Quantization
	(ErrorCode)(0),                   // 3: edgepb.ErrorCode
	(IndexChagedType)(0),             // 4: edgepb.IndexChagedType
	(LogicalOperator)(0),             // 5: edgepb.LogicalOperator
	(Op)(0),                          // 6: edgepb.Op
	(*CollectionName)(nil),           // 7: edgepb.CollectionName
	(*Collection)(nil),               // 8: edgepb.Collection
	(*CollectionResponse)(nil),       // 9: edgepb.CollectionResponse
	(*Index)(nil),                    // 10: edgepb.Index
	(*Response)(nil),                 // 11: edgepb.Response
	(*Error)(nil),                    // 12: edgepb.Error
	(*DeleteCollectionResponse)(nil), // 13: edgepb.DeleteCollectionResponse
	(*CollectionDetail)(nil),         // 14: edgepb.CollectionDetail
	(*IndexChange)(nil),              // 15: edgepb.IndexChange
	(*SearchIndex)(nil),              // 16: edgepb.SearchIndex
	(*SearchFilter)(nil),             // 17: edgepb.SearchFilter
	(*FilterExpression)(nil),         // 18: edgepb.FilterExpression
	(*CompositeFilter)(nil),          // 19: edgepb.CompositeFilter
	(*SearchResponse)(nil),           // 20: edgepb.SearchResponse
	(*Candidates)(nil),               // 21: edgepb.Candidates
	(*structpb.Struct)(nil),          // 22: google.protobuf.Struct
	(*emptypb.Empty)(nil),            // 23: google.protobuf.Empty
}
var file_idl_proto_v4_edge_proto_depIdxs = []int32{
	10, // 0: edgepb.Collection.index:type_name -> edgepb.Index
	1,  // 1: edgepb.Collection.distance:type_name -> edgepb.Distance
	2,  // 2: edgepb.Collection.quantization:type_name -> edgepb.Quantization
	8,  // 3: edgepb.CollectionResponse.collection:type_name -> edgepb.Collection
	12, // 4: edgepb.CollectionResponse.error:type_name -> edgepb.Error
	0,  // 5: edgepb.Index.index_type:type_name -> edgepb.IndexType
	12, // 6: edgepb.Response.error:type_name -> edgepb.Error
	3,  // 7: edgepb.Error.error_code:type_name -> edgepb.ErrorCode
	12, // 8: edgepb.DeleteCollectionResponse.error:type_name -> edgepb.Error
	8,  // 9: edgepb.CollectionDetail.collection:type_name -> edgepb.Collection
	12, // 10: edgepb.CollectionDetail.error:type_name -> edgepb.Error
	22, // 11: edgepb.IndexChange.metadata:type_name -> google.protobuf.Struct
	4,  // 12: edgepb.IndexChange.changed:type_name -> edgepb.IndexChagedType
	18, // 13: edgepb.SearchIndex.filter_expression:type_name -> edgepb.FilterExpression
	6,  // 14: edgepb.SearchFilter.op:type_name -> edgepb.Op
	17, // 15: edgepb.FilterExpression.filter:type_name -> edgepb.SearchFilter
	19, // 16: edgepb.FilterExpression.composite:type_name -> edgepb.CompositeFilter
	5,  // 17: edgepb.CompositeFilter.op:type_name -> edgepb.LogicalOperator
	18, // 18: edgepb.CompositeFilter.expressions:type_name -> edgepb.FilterExpression
	12, // 19: edgepb.SearchResponse.error:type_name -> edgepb.Error
	21, // 20: edgepb.SearchResponse.candidates:type_name -> edgepb.Candidates
	22, // 21: edgepb.Candidates.metadata:type_name -> google.protobuf.Struct
	23, // 22: edgepb.EdgeRpc.Ping:input_type -> google.protobuf.Empty
	8,  // 23: edgepb.EdgeRpc.CreateCollection:input_type -> edgepb.Collection
	7,  // 24: edgepb.EdgeRpc.DeleteCollection:input_type -> edgepb.CollectionName
	7,  // 25: edgepb.EdgeRpc.GetCollection:input_type -> edgepb.CollectionName
	7,  // 26: edgepb.EdgeRpc.LoadCollection:input_type -> edgepb.CollectionName
	7,  // 27: edgepb.EdgeRpc.ReleaseCollection:input_type -> edgepb.CollectionName
	7,  // 28: edgepb.EdgeRpc.Flush:input_type -> edgepb.CollectionName
	15, // 29: edgepb.EdgeRpc.Index:input_type -> edgepb.IndexChange
	16, // 30: edgepb.EdgeRpc.Search:input_type -> edgepb.SearchIndex
	23, // 31: edgepb.EdgeRpc.Ping:output_type -> google.protobuf.Empty
	9,  // 32: edgepb.EdgeRpc.CreateCollection:output_type -> edgepb.CollectionResponse
	13, // 33: edgepb.EdgeRpc.DeleteCollection:output_type -> edgepb.DeleteCollectionResponse
	14, // 34: edgepb.EdgeRpc.GetCollection:output_type -> edgepb.CollectionDetail
	14, // 35: edgepb.EdgeRpc.LoadCollection:output_type -> edgepb.CollectionDetail
	11, // 36: edgepb.EdgeRpc.ReleaseCollection:output_type -> edgepb.Response
	11, // 37: edgepb.EdgeRpc.Flush:output_type -> edgepb.Response
	11, // 38: edgepb.EdgeRpc.Index:output_type -> edgepb.Response
	20, // 39: edgepb.EdgeRpc.Search:output_type -> edgepb.SearchResponse
	31, // [31:40] is the sub-list for method output_type
	22, // [22:31] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_idl_proto_v4_edge_proto_init() }
func file_idl_proto_v4_edge_proto_init() {
	if File_idl_proto_v4_edge_proto != nil {
		return
	}
	file_idl_proto_v4_edge_proto_msgTypes[10].OneofWrappers = []any{
		(*SearchFilter_StringVal)(nil),
		(*SearchFilter_IntVal)(nil),
		(*SearchFilter_FloatVal)(nil),
		(*SearchFilter_BoolVal)(nil),
	}
	file_idl_proto_v4_edge_proto_msgTypes[11].OneofWrappers = []any{
		(*FilterExpression_Filter)(nil),
		(*FilterExpression_Composite)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_proto_v4_edge_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_proto_v4_edge_proto_goTypes,
		DependencyIndexes: file_idl_proto_v4_edge_proto_depIdxs,
		EnumInfos:         file_idl_proto_v4_edge_proto_enumTypes,
		MessageInfos:      file_idl_proto_v4_edge_proto_msgTypes,
	}.Build()
	File_idl_proto_v4_edge_proto = out.File
	file_idl_proto_v4_edge_proto_rawDesc = nil
	file_idl_proto_v4_edge_proto_goTypes = nil
	file_idl_proto_v4_edge_proto_depIdxs = nil
}
