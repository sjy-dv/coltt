// Licensed to sjy-dv under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. sjy-dv licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.0
// source: idl/proto/v3/disk.proto

package diskproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// recovery collection
type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName            string  `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	LevelMultiplier           float32 `protobuf:"fixed32,2,opt,name=level_multiplier,json=levelMultiplier,proto3" json:"level_multiplier,omitempty"`
	Ef                        int32   `protobuf:"varint,3,opt,name=ef,proto3" json:"ef,omitempty"`
	EfConstruction            int32   `protobuf:"varint,4,opt,name=ef_construction,json=efConstruction,proto3" json:"ef_construction,omitempty"`
	M                         int32   `protobuf:"varint,5,opt,name=m,proto3" json:"m,omitempty"`
	MMax                      int32   `protobuf:"varint,6,opt,name=m_max,json=mMax,proto3" json:"m_max,omitempty"`
	MMax0                     int32   `protobuf:"varint,7,opt,name=m_max0,json=mMax0,proto3" json:"m_max0,omitempty"`
	HeuristicExtendCandidates bool    `protobuf:"varint,8,opt,name=heuristic_extend_candidates,json=heuristicExtendCandidates,proto3" json:"heuristic_extend_candidates,omitempty"`
	HeuristicKeepPruned       bool    `protobuf:"varint,9,opt,name=heuristic_keep_pruned,json=heuristicKeepPruned,proto3" json:"heuristic_keep_pruned,omitempty"`
	SearchAlgorithm           string  `protobuf:"bytes,10,opt,name=search_algorithm,json=searchAlgorithm,proto3" json:"search_algorithm,omitempty"`
	VectorDimension           uint32  `protobuf:"varint,11,opt,name=vector_dimension,json=vectorDimension,proto3" json:"vector_dimension,omitempty"`
	Distance                  string  `protobuf:"bytes,12,opt,name=distance,proto3" json:"distance,omitempty"`
	Quantization              string  `protobuf:"bytes,13,opt,name=quantization,proto3" json:"quantization,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	mi := &file_idl_proto_v3_disk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v3_disk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_idl_proto_v3_disk_proto_rawDescGZIP(), []int{0}
}

func (x *Collection) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *Collection) GetLevelMultiplier() float32 {
	if x != nil {
		return x.LevelMultiplier
	}
	return 0
}

func (x *Collection) GetEf() int32 {
	if x != nil {
		return x.Ef
	}
	return 0
}

func (x *Collection) GetEfConstruction() int32 {
	if x != nil {
		return x.EfConstruction
	}
	return 0
}

func (x *Collection) GetM() int32 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *Collection) GetMMax() int32 {
	if x != nil {
		return x.MMax
	}
	return 0
}

func (x *Collection) GetMMax0() int32 {
	if x != nil {
		return x.MMax0
	}
	return 0
}

func (x *Collection) GetHeuristicExtendCandidates() bool {
	if x != nil {
		return x.HeuristicExtendCandidates
	}
	return false
}

func (x *Collection) GetHeuristicKeepPruned() bool {
	if x != nil {
		return x.HeuristicKeepPruned
	}
	return false
}

func (x *Collection) GetSearchAlgorithm() string {
	if x != nil {
		return x.SearchAlgorithm
	}
	return ""
}

func (x *Collection) GetVectorDimension() uint32 {
	if x != nil {
		return x.VectorDimension
	}
	return 0
}

func (x *Collection) GetDistance() string {
	if x != nil {
		return x.Distance
	}
	return ""
}

func (x *Collection) GetQuantization() string {
	if x != nil {
		return x.Quantization
	}
	return ""
}

type Dataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionUniqueId uint64           `protobuf:"varint,1,opt,name=collection_unique_id,json=collectionUniqueId,proto3" json:"collection_unique_id,omitempty"`
	UserSpecificId     string           `protobuf:"bytes,2,opt,name=user_specific_id,json=userSpecificId,proto3" json:"user_specific_id,omitempty"`
	Vector             []float32        `protobuf:"fixed32,3,rep,packed,name=vector,proto3" json:"vector,omitempty"`
	Metadata           *structpb.Struct `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Dataset) Reset() {
	*x = Dataset{}
	mi := &file_idl_proto_v3_disk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dataset) ProtoMessage() {}

func (x *Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v3_disk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dataset.ProtoReflect.Descriptor instead.
func (*Dataset) Descriptor() ([]byte, []int) {
	return file_idl_proto_v3_disk_proto_rawDescGZIP(), []int{1}
}

func (x *Dataset) GetCollectionUniqueId() uint64 {
	if x != nil {
		return x.CollectionUniqueId
	}
	return 0
}

func (x *Dataset) GetUserSpecificId() string {
	if x != nil {
		return x.UserSpecificId
	}
	return ""
}

func (x *Dataset) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *Dataset) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_idl_proto_v3_disk_proto protoreflect.FileDescriptor

var file_idl_proto_v3_disk_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x64, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x64,
	0x69, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xdd, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x65, 0x66, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x65, 0x66, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c,
	0x0a, 0x01, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6d, 0x12, 0x13, 0x0a, 0x05,
	0x6d, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x4d, 0x61,
	0x78, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x5f, 0x6d, 0x61, 0x78, 0x30, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6d, 0x4d, 0x61, 0x78, 0x30, 0x12, 0x3e, 0x0a, 0x1b, 0x68, 0x65, 0x75, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x68,
	0x65, 0x75, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x68, 0x65, 0x75, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x70, 0x72, 0x75, 0x6e, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x68, 0x65, 0x75, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x4b, 0x65, 0x65, 0x70, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb2, 0x01, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x30,
	0x0a, 0x14, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x64, 0x69, 0x73,
	0x6b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_idl_proto_v3_disk_proto_rawDescOnce sync.Once
	file_idl_proto_v3_disk_proto_rawDescData = file_idl_proto_v3_disk_proto_rawDesc
)

func file_idl_proto_v3_disk_proto_rawDescGZIP() []byte {
	file_idl_proto_v3_disk_proto_rawDescOnce.Do(func() {
		file_idl_proto_v3_disk_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_proto_v3_disk_proto_rawDescData)
	})
	return file_idl_proto_v3_disk_proto_rawDescData
}

var file_idl_proto_v3_disk_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_idl_proto_v3_disk_proto_goTypes = []any{
	(*Collection)(nil),      // 0: diskproto.Collection
	(*Dataset)(nil),         // 1: diskproto.Dataset
	(*structpb.Struct)(nil), // 2: google.protobuf.Struct
}
var file_idl_proto_v3_disk_proto_depIdxs = []int32{
	2, // 0: diskproto.Dataset.metadata:type_name -> google.protobuf.Struct
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_idl_proto_v3_disk_proto_init() }
func file_idl_proto_v3_disk_proto_init() {
	if File_idl_proto_v3_disk_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_proto_v3_disk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_idl_proto_v3_disk_proto_goTypes,
		DependencyIndexes: file_idl_proto_v3_disk_proto_depIdxs,
		MessageInfos:      file_idl_proto_v3_disk_proto_msgTypes,
	}.Build()
	File_idl_proto_v3_disk_proto = out.File
	file_idl_proto_v3_disk_proto_rawDesc = nil
	file_idl_proto_v3_disk_proto_goTypes = nil
	file_idl_proto_v3_disk_proto_depIdxs = nil
}
