// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.0
// source: idl/proto/v2/resourceCoordinator.proto

package resourceCoordinatorV2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorageType int32

const (
	StorageType_highspeed_memory StorageType = 0
)

// Enum value maps for StorageType.
var (
	StorageType_name = map[int32]string{
		0: "highspeed_memory",
	}
	StorageType_value = map[string]int32{
		"highspeed_memory": 0,
	}
)

func (x StorageType) Enum() *StorageType {
	p := new(StorageType)
	*p = x
	return p
}

func (x StorageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageType) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v2_resourceCoordinator_proto_enumTypes[0].Descriptor()
}

func (StorageType) Type() protoreflect.EnumType {
	return &file_idl_proto_v2_resourceCoordinator_proto_enumTypes[0]
}

func (x StorageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageType.Descriptor instead.
func (StorageType) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{0}
}

type Distance int32

const (
	Distance_L2sq       Distance = 0
	Distance_Ip         Distance = 1
	Distance_Cosine     Distance = 2
	Distance_Haversine  Distance = 3
	Distance_Divergence Distance = 4
	Distance_Pearson    Distance = 5
	Distance_Hamming    Distance = 6
	Distance_Tanimoto   Distance = 7
	Distance_Sorensen   Distance = 8
)

// Enum value maps for Distance.
var (
	Distance_name = map[int32]string{
		0: "L2sq",
		1: "Ip",
		2: "Cosine",
		3: "Haversine",
		4: "Divergence",
		5: "Pearson",
		6: "Hamming",
		7: "Tanimoto",
		8: "Sorensen",
	}
	Distance_value = map[string]int32{
		"L2sq":       0,
		"Ip":         1,
		"Cosine":     2,
		"Haversine":  3,
		"Divergence": 4,
		"Pearson":    5,
		"Hamming":    6,
		"Tanimoto":   7,
		"Sorensen":   8,
	}
)

func (x Distance) Enum() *Distance {
	p := new(Distance)
	*p = x
	return p
}

func (x Distance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Distance) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v2_resourceCoordinator_proto_enumTypes[1].Descriptor()
}

func (Distance) Type() protoreflect.EnumType {
	return &file_idl_proto_v2_resourceCoordinator_proto_enumTypes[1]
}

func (x Distance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Distance.Descriptor instead.
func (Distance) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{1}
}

type Quantization int32

const (
	Quantization_None Quantization = 0
	Quantization_BF16 Quantization = 1
	Quantization_F16  Quantization = 2
	Quantization_F32  Quantization = 3
	Quantization_F64  Quantization = 4
	Quantization_I8   Quantization = 5
	Quantization_B1   Quantization = 6
)

// Enum value maps for Quantization.
var (
	Quantization_name = map[int32]string{
		0: "None",
		1: "BF16",
		2: "F16",
		3: "F32",
		4: "F64",
		5: "I8",
		6: "B1",
	}
	Quantization_value = map[string]int32{
		"None": 0,
		"BF16": 1,
		"F16":  2,
		"F32":  3,
		"F64":  4,
		"I8":   5,
		"B1":   6,
	}
)

func (x Quantization) Enum() *Quantization {
	p := new(Quantization)
	*p = x
	return p
}

func (x Quantization) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Quantization) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v2_resourceCoordinator_proto_enumTypes[2].Descriptor()
}

func (Quantization) Type() protoreflect.EnumType {
	return &file_idl_proto_v2_resourceCoordinator_proto_enumTypes[2]
}

func (x Quantization) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Quantization.Descriptor instead.
func (Quantization) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{2}
}

type ErrorCode int32

const (
	ErrorCode_UNDEFINED                     ErrorCode = 0 // check error message
	ErrorCode_RPC_ERROR                     ErrorCode = 1
	ErrorCode_COMMUNICATION_SHARD_RPC_ERROR ErrorCode = 2
	ErrorCode_COMMUNICATION_SHARD_ERROR     ErrorCode = 3
	ErrorCode_MARSHAL_ERROR                 ErrorCode = 4
	ErrorCode_INTERNAL_FUNC_ERROR           ErrorCode = 5
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "UNDEFINED",
		1: "RPC_ERROR",
		2: "COMMUNICATION_SHARD_RPC_ERROR",
		3: "COMMUNICATION_SHARD_ERROR",
		4: "MARSHAL_ERROR",
		5: "INTERNAL_FUNC_ERROR",
	}
	ErrorCode_value = map[string]int32{
		"UNDEFINED":                     0,
		"RPC_ERROR":                     1,
		"COMMUNICATION_SHARD_RPC_ERROR": 2,
		"COMMUNICATION_SHARD_ERROR":     3,
		"MARSHAL_ERROR":                 4,
		"INTERNAL_FUNC_ERROR":           5,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_proto_v2_resourceCoordinator_proto_enumTypes[3].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_idl_proto_v2_resourceCoordinator_proto_enumTypes[3]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{3}
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName  string       `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Distance        Distance     `protobuf:"varint,2,opt,name=distance,proto3,enum=resourceCoordinatorV2.Distance" json:"distance,omitempty"`
	Quantization    Quantization `protobuf:"varint,3,opt,name=quantization,proto3,enum=resourceCoordinatorV2.Quantization" json:"quantization,omitempty"`
	Dim             uint32       `protobuf:"varint,4,opt,name=dim,proto3" json:"dim,omitempty"`
	Connectivity    uint32       `protobuf:"varint,5,opt,name=connectivity,proto3" json:"connectivity,omitempty"`
	ExpansionAdd    uint32       `protobuf:"varint,6,opt,name=expansion_add,json=expansionAdd,proto3" json:"expansion_add,omitempty"`
	ExpansionSearch uint32       `protobuf:"varint,7,opt,name=expansion_search,json=expansionSearch,proto3" json:"expansion_search,omitempty"`
	Multi           bool         `protobuf:"varint,8,opt,name=multi,proto3" json:"multi,omitempty"`
	Storage         StorageType  `protobuf:"varint,9,opt,name=storage,proto3,enum=resourceCoordinatorV2.StorageType" json:"storage,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{0}
}

func (x *Collection) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *Collection) GetDistance() Distance {
	if x != nil {
		return x.Distance
	}
	return Distance_L2sq
}

func (x *Collection) GetQuantization() Quantization {
	if x != nil {
		return x.Quantization
	}
	return Quantization_None
}

func (x *Collection) GetDim() uint32 {
	if x != nil {
		return x.Dim
	}
	return 0
}

func (x *Collection) GetConnectivity() uint32 {
	if x != nil {
		return x.Connectivity
	}
	return 0
}

func (x *Collection) GetExpansionAdd() uint32 {
	if x != nil {
		return x.ExpansionAdd
	}
	return 0
}

func (x *Collection) GetExpansionSearch() uint32 {
	if x != nil {
		return x.ExpansionSearch
	}
	return 0
}

func (x *Collection) GetMulti() bool {
	if x != nil {
		return x.Multi
	}
	return false
}

func (x *Collection) GetStorage() StorageType {
	if x != nil {
		return x.Storage
	}
	return StorageType_highspeed_memory
}

type CollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Status     bool        `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error      *Error      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CollectionResponse) Reset() {
	*x = CollectionResponse{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionResponse) ProtoMessage() {}

func (x *CollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionResponse.ProtoReflect.Descriptor instead.
func (*CollectionResponse) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{1}
}

func (x *CollectionResponse) GetCollection() *Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *CollectionResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CollectionResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CollectionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection       *Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	CollectionSize   uint32      `protobuf:"varint,2,opt,name=collection_size,json=collectionSize,proto3" json:"collection_size,omitempty"`
	CollectionMemory uint64      `protobuf:"varint,3,opt,name=collection_memory,json=collectionMemory,proto3" json:"collection_memory,omitempty"`
	Status           bool        `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Error            *Error      `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CollectionDetail) Reset() {
	*x = CollectionDetail{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionDetail) ProtoMessage() {}

func (x *CollectionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionDetail.ProtoReflect.Descriptor instead.
func (*CollectionDetail) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{2}
}

func (x *CollectionDetail) GetCollection() *Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *CollectionDetail) GetCollectionSize() uint32 {
	if x != nil {
		return x.CollectionSize
	}
	return 0
}

func (x *CollectionDetail) GetCollectionMemory() uint64 {
	if x != nil {
		return x.CollectionMemory
	}
	return 0
}

func (x *CollectionDetail) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CollectionDetail) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CollectionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection       *Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	CollectionSize   uint32      `protobuf:"varint,2,opt,name=collection_size,json=collectionSize,proto3" json:"collection_size,omitempty"`
	CollectionMemory uint64      `protobuf:"varint,3,opt,name=collection_memory,json=collectionMemory,proto3" json:"collection_memory,omitempty"`
}

func (x *CollectionList) Reset() {
	*x = CollectionList{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionList) ProtoMessage() {}

func (x *CollectionList) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionList.ProtoReflect.Descriptor instead.
func (*CollectionList) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{3}
}

func (x *CollectionList) GetCollection() *Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *CollectionList) GetCollectionSize() uint32 {
	if x != nil {
		return x.CollectionSize
	}
	return 0
}

func (x *CollectionList) GetCollectionMemory() uint64 {
	if x != nil {
		return x.CollectionMemory
	}
	return 0
}

type CollectionLists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*CollectionList `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
	Status      bool              `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error       *Error            `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CollectionLists) Reset() {
	*x = CollectionLists{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionLists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionLists) ProtoMessage() {}

func (x *CollectionLists) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionLists.ProtoReflect.Descriptor instead.
func (*CollectionLists) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{4}
}

func (x *CollectionLists) GetCollections() []*CollectionList {
	if x != nil {
		return x.Collections
	}
	return nil
}

func (x *CollectionLists) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CollectionLists) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeleteCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteCollectionResponse) Reset() {
	*x = DeleteCollectionResponse{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionResponse) ProtoMessage() {}

func (x *DeleteCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionResponse.ProtoReflect.Descriptor instead.
func (*DeleteCollectionResponse) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCollectionResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DeleteCollectionResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CollectionName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	WithSize       bool   `protobuf:"varint,2,opt,name=with_size,json=withSize,proto3" json:"with_size,omitempty"`
}

func (x *CollectionName) Reset() {
	*x = CollectionName{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionName) ProtoMessage() {}

func (x *CollectionName) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionName.ProtoReflect.Descriptor instead.
func (*CollectionName) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{6}
}

func (x *CollectionName) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *CollectionName) GetWithSize() bool {
	if x != nil {
		return x.WithSize
	}
	return false
}

type GetCollections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithSize bool `protobuf:"varint,1,opt,name=with_size,json=withSize,proto3" json:"with_size,omitempty"`
}

func (x *GetCollections) Reset() {
	*x = GetCollections{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollections) ProtoMessage() {}

func (x *GetCollections) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollections.ProtoReflect.Descriptor instead.
func (*GetCollections) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{7}
}

func (x *GetCollections) GetWithSize() bool {
	if x != nil {
		return x.WithSize
	}
	return false
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{8}
}

func (x *Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Response) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string    `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorCode    ErrorCode `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=resourceCoordinatorV2.ErrorCode" json:"error_code,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{9}
}

func (x *Error) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Error) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_UNDEFINED
}

type SystemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uptime         uint64  `protobuf:"varint,1,opt,name=uptime,proto3" json:"uptime,omitempty"`
	CpuLoad1       float64 `protobuf:"fixed64,2,opt,name=cpu_load1,json=cpuLoad1,proto3" json:"cpu_load1,omitempty"`
	CpuLoad5       float64 `protobuf:"fixed64,3,opt,name=cpu_load5,json=cpuLoad5,proto3" json:"cpu_load5,omitempty"`
	CpuLoad15      float64 `protobuf:"fixed64,4,opt,name=cpu_load15,json=cpuLoad15,proto3" json:"cpu_load15,omitempty"`
	MemTotal       uint64  `protobuf:"varint,5,opt,name=mem_total,json=memTotal,proto3" json:"mem_total,omitempty"`
	MemAvailable   uint64  `protobuf:"varint,6,opt,name=mem_available,json=memAvailable,proto3" json:"mem_available,omitempty"`
	MemUsed        uint64  `protobuf:"varint,7,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty"`
	MemFree        uint64  `protobuf:"varint,8,opt,name=mem_free,json=memFree,proto3" json:"mem_free,omitempty"`
	MemUsedPercent float64 `protobuf:"fixed64,9,opt,name=mem_used_percent,json=memUsedPercent,proto3" json:"mem_used_percent,omitempty"`
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_idl_proto_v2_resourceCoordinator_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP(), []int{10}
}

func (x *SystemInfo) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *SystemInfo) GetCpuLoad1() float64 {
	if x != nil {
		return x.CpuLoad1
	}
	return 0
}

func (x *SystemInfo) GetCpuLoad5() float64 {
	if x != nil {
		return x.CpuLoad5
	}
	return 0
}

func (x *SystemInfo) GetCpuLoad15() float64 {
	if x != nil {
		return x.CpuLoad15
	}
	return 0
}

func (x *SystemInfo) GetMemTotal() uint64 {
	if x != nil {
		return x.MemTotal
	}
	return 0
}

func (x *SystemInfo) GetMemAvailable() uint64 {
	if x != nil {
		return x.MemAvailable
	}
	return 0
}

func (x *SystemInfo) GetMemUsed() uint64 {
	if x != nil {
		return x.MemUsed
	}
	return 0
}

func (x *SystemInfo) GetMemFree() uint64 {
	if x != nil {
		return x.MemFree
	}
	return 0
}

func (x *SystemInfo) GetMemUsedPercent() float64 {
	if x != nil {
		return x.MemUsedPercent
	}
	return 0
}

var File_idl_proto_v2_resourceCoordinator_proto protoreflect.FileDescriptor

var file_idl_proto_v2_resourceCoordinator_proto_rawDesc = []byte{
	0x0a, 0x26, 0x69, 0x64, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x03, 0x0a,
	0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x47, 0x0a, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x64, 0x69, 0x6d, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x64, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x3c, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf7, 0x01, 0x0a, 0x10, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x41, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x56, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x22, 0xa6, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56,
	0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x56, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x56, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x77, 0x69, 0x74, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x2d, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x77, 0x69, 0x74, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x56, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x56, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x6d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x9f, 0x02, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f,
	0x61, 0x64, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x4c, 0x6f,
	0x61, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x35,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x35,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x35, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x31, 0x35, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x65, 0x6d, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x65, 0x6d, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x6d, 0x65, 0x6d, 0x46, 0x72, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x2a, 0x23, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x10, 0x00, 0x2a, 0x7d, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x32, 0x73, 0x71, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x49, 0x70, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x48, 0x61, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6e, 0x65, 0x10, 0x03, 0x12,
	0x0e, 0x0a, 0x0a, 0x44, 0x69, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x10, 0x04, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x65, 0x61, 0x72, 0x73, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07,
	0x48, 0x61, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x61, 0x6e,
	0x69, 0x6d, 0x6f, 0x74, 0x6f, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x65, 0x6e,
	0x73, 0x65, 0x6e, 0x10, 0x08, 0x2a, 0x4d, 0x0a, 0x0c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x46, 0x31, 0x36, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x31, 0x36,
	0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x33, 0x32, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x46,
	0x36, 0x34, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x38, 0x10, 0x05, 0x12, 0x06, 0x0a, 0x02,
	0x42, 0x31, 0x10, 0x06, 0x2a, 0x97, 0x01, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x50, 0x43, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x44, 0x5f, 0x52, 0x50, 0x43, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x41, 0x52, 0x53, 0x48, 0x41, 0x4c, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x32, 0xfe,
	0x05, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x62, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a,
	0x2f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x61, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x56, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x56, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0e, 0x4c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x00, 0x12,
	0x5d, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x1f, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x56, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x10, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x56, 0x32, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x42,
	0x19, 0x5a, 0x17, 0x2e, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_idl_proto_v2_resourceCoordinator_proto_rawDescOnce sync.Once
	file_idl_proto_v2_resourceCoordinator_proto_rawDescData = file_idl_proto_v2_resourceCoordinator_proto_rawDesc
)

func file_idl_proto_v2_resourceCoordinator_proto_rawDescGZIP() []byte {
	file_idl_proto_v2_resourceCoordinator_proto_rawDescOnce.Do(func() {
		file_idl_proto_v2_resourceCoordinator_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_proto_v2_resourceCoordinator_proto_rawDescData)
	})
	return file_idl_proto_v2_resourceCoordinator_proto_rawDescData
}

var file_idl_proto_v2_resourceCoordinator_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_idl_proto_v2_resourceCoordinator_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_idl_proto_v2_resourceCoordinator_proto_goTypes = []any{
	(StorageType)(0),                 // 0: resourceCoordinatorV2.StorageType
	(Distance)(0),                    // 1: resourceCoordinatorV2.Distance
	(Quantization)(0),                // 2: resourceCoordinatorV2.Quantization
	(ErrorCode)(0),                   // 3: resourceCoordinatorV2.ErrorCode
	(*Collection)(nil),               // 4: resourceCoordinatorV2.Collection
	(*CollectionResponse)(nil),       // 5: resourceCoordinatorV2.CollectionResponse
	(*CollectionDetail)(nil),         // 6: resourceCoordinatorV2.CollectionDetail
	(*CollectionList)(nil),           // 7: resourceCoordinatorV2.CollectionList
	(*CollectionLists)(nil),          // 8: resourceCoordinatorV2.CollectionLists
	(*DeleteCollectionResponse)(nil), // 9: resourceCoordinatorV2.DeleteCollectionResponse
	(*CollectionName)(nil),           // 10: resourceCoordinatorV2.CollectionName
	(*GetCollections)(nil),           // 11: resourceCoordinatorV2.GetCollections
	(*Response)(nil),                 // 12: resourceCoordinatorV2.Response
	(*Error)(nil),                    // 13: resourceCoordinatorV2.Error
	(*SystemInfo)(nil),               // 14: resourceCoordinatorV2.SystemInfo
	(*emptypb.Empty)(nil),            // 15: google.protobuf.Empty
}
var file_idl_proto_v2_resourceCoordinator_proto_depIdxs = []int32{
	1,  // 0: resourceCoordinatorV2.Collection.distance:type_name -> resourceCoordinatorV2.Distance
	2,  // 1: resourceCoordinatorV2.Collection.quantization:type_name -> resourceCoordinatorV2.Quantization
	0,  // 2: resourceCoordinatorV2.Collection.storage:type_name -> resourceCoordinatorV2.StorageType
	4,  // 3: resourceCoordinatorV2.CollectionResponse.collection:type_name -> resourceCoordinatorV2.Collection
	13, // 4: resourceCoordinatorV2.CollectionResponse.error:type_name -> resourceCoordinatorV2.Error
	4,  // 5: resourceCoordinatorV2.CollectionDetail.collection:type_name -> resourceCoordinatorV2.Collection
	13, // 6: resourceCoordinatorV2.CollectionDetail.error:type_name -> resourceCoordinatorV2.Error
	4,  // 7: resourceCoordinatorV2.CollectionList.collection:type_name -> resourceCoordinatorV2.Collection
	7,  // 8: resourceCoordinatorV2.CollectionLists.collections:type_name -> resourceCoordinatorV2.CollectionList
	13, // 9: resourceCoordinatorV2.CollectionLists.error:type_name -> resourceCoordinatorV2.Error
	13, // 10: resourceCoordinatorV2.DeleteCollectionResponse.error:type_name -> resourceCoordinatorV2.Error
	13, // 11: resourceCoordinatorV2.Response.error:type_name -> resourceCoordinatorV2.Error
	3,  // 12: resourceCoordinatorV2.Error.error_code:type_name -> resourceCoordinatorV2.ErrorCode
	15, // 13: resourceCoordinatorV2.ResourceCoordinator.Ping:input_type -> google.protobuf.Empty
	4,  // 14: resourceCoordinatorV2.ResourceCoordinator.CreateCollection:input_type -> resourceCoordinatorV2.Collection
	10, // 15: resourceCoordinatorV2.ResourceCoordinator.DeleteCollection:input_type -> resourceCoordinatorV2.CollectionName
	10, // 16: resourceCoordinatorV2.ResourceCoordinator.GetCollection:input_type -> resourceCoordinatorV2.CollectionName
	11, // 17: resourceCoordinatorV2.ResourceCoordinator.GetAllCollections:input_type -> resourceCoordinatorV2.GetCollections
	10, // 18: resourceCoordinatorV2.ResourceCoordinator.LoadCollection:input_type -> resourceCoordinatorV2.CollectionName
	10, // 19: resourceCoordinatorV2.ResourceCoordinator.ReleaseCollection:input_type -> resourceCoordinatorV2.CollectionName
	15, // 20: resourceCoordinatorV2.ResourceCoordinator.LoadResourceInfo:input_type -> google.protobuf.Empty
	15, // 21: resourceCoordinatorV2.ResourceCoordinator.Ping:output_type -> google.protobuf.Empty
	5,  // 22: resourceCoordinatorV2.ResourceCoordinator.CreateCollection:output_type -> resourceCoordinatorV2.CollectionResponse
	9,  // 23: resourceCoordinatorV2.ResourceCoordinator.DeleteCollection:output_type -> resourceCoordinatorV2.DeleteCollectionResponse
	6,  // 24: resourceCoordinatorV2.ResourceCoordinator.GetCollection:output_type -> resourceCoordinatorV2.CollectionDetail
	8,  // 25: resourceCoordinatorV2.ResourceCoordinator.GetAllCollections:output_type -> resourceCoordinatorV2.CollectionLists
	6,  // 26: resourceCoordinatorV2.ResourceCoordinator.LoadCollection:output_type -> resourceCoordinatorV2.CollectionDetail
	12, // 27: resourceCoordinatorV2.ResourceCoordinator.ReleaseCollection:output_type -> resourceCoordinatorV2.Response
	14, // 28: resourceCoordinatorV2.ResourceCoordinator.LoadResourceInfo:output_type -> resourceCoordinatorV2.SystemInfo
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_idl_proto_v2_resourceCoordinator_proto_init() }
func file_idl_proto_v2_resourceCoordinator_proto_init() {
	if File_idl_proto_v2_resourceCoordinator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_proto_v2_resourceCoordinator_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_proto_v2_resourceCoordinator_proto_goTypes,
		DependencyIndexes: file_idl_proto_v2_resourceCoordinator_proto_depIdxs,
		EnumInfos:         file_idl_proto_v2_resourceCoordinator_proto_enumTypes,
		MessageInfos:      file_idl_proto_v2_resourceCoordinator_proto_msgTypes,
	}.Build()
	File_idl_proto_v2_resourceCoordinator_proto = out.File
	file_idl_proto_v2_resourceCoordinator_proto_rawDesc = nil
	file_idl_proto_v2_resourceCoordinator_proto_goTypes = nil
	file_idl_proto_v2_resourceCoordinator_proto_depIdxs = nil
}
